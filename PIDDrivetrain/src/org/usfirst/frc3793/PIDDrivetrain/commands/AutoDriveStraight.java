// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3793.PIDDrivetrain.commands;

import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3793.PIDDrivetrain.Robot;

/**
 *
 */
public class  AutoDriveStraight extends Command {
	private double speed = 0.1;
	private double adjVelocity;

    public AutoDriveStraight(double dist) {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrainPIDR);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        adjVelocity = speed * (dist > 0.0 ? 1 : -1);
        setDistance(dist);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.driveTrainPIDR.reset();
    	Robot.driveTrainPIDR.enable();
        Robot.driveTrainPIDR.usePIDOutput(adjVelocity);
   //     Robot.driveTrainPIDR.enable();
    }
    	
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	boolean a;
    	a = Robot.driveTrainPIDR.onTarget();
  //  	System.out.println("PID on Target is" + a);
        return a;
    }

    // Called once after isFinished returns true
    protected void end() {
    	System.out.println("AutoDriveStraight is at end");
    	Robot.driveTrainPIDR.usePIDOutput(0.0);
    	Robot.driveTrainPIDR.disable();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
       	Robot.driveTrainPIDR.usePIDOutput(0.0);
    	Robot.driveTrainPIDR.disable();
    }
    public static void setDistance(double dist) {
    	Robot.driveTrainPIDR.setSetpoint(dist);
    }
    
}
